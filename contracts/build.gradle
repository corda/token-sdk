apply plugin: 'kotlin-jpa'
apply plugin: 'net.corda.plugins.cordapp'

if (!(corda_release_version in ['4.1'])) {
    apply from: "${rootProject.projectDir}/deterministic.gradle"
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
}

dependencies {
    // Kotlin.
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda dependencies.
    cordaCompile("$corda_release_group:corda-core:$corda_release_version") {
        changing = true
    }

    // Logging.
    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"

    // Testing.
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    testCompile project(":modules:contracts-for-testing")
}

cordapp {
    targetPlatformVersion cordapp_target_platform_version
    minimumPlatformVersion cordapp_minimum_platform_version
    contract {
        name "Token SDK Contracts"
        vendor cordapp_vendor
        licence cordapp_license
        versionId cordapp_version_id
    }
    signing {
        enabled false
    }
}

jar {
    baseName "tokens-contracts"
}

test {

    // Add dependency on jar task, since it will be main target for testing
    dependsOn jar

    // Rearrange test classpath, add compiled JAR instead of main classes
    classpath = project.sourceSets.test.output + configurations.testRuntimeClasspath + files(jar.archiveFile)

}