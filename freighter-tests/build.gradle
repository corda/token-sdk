import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'idea'
}

repositories {
    maven { url "$artifactory_contextUrl/freighter-dev" }
}

sourceSets {
    freighterTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/freighterTest/kotlin')
        }
    }
}

tasks.register('freighterTest', Test) {
    maxParallelForks 2
    testClassesDirs = sourceSets.freighterTest.output.classesDirs
    classpath = sourceSets.freighterTest.runtimeClasspath
    useJUnitPlatform {
        includeTags "DOCKER"
        excludeTags "AZURE", "ORACLE"
        if (Os.isFamily(Os.FAMILY_WINDOWS) || Os.isFamily(Os.FAMILY_MAC)) {
            //windows + mac cannot run comcast tests and cannot run oracle tests due to credential store issues
            excludeTags "FULL_LINUX_KERNEL", "ORACLE"
        }

        if (Os.isFamily(Os.FAMILY_UNIX) && "uname -a".execute().getText().contains("microsoft")) {
            excludeTags "FULL_LINUX_KERNEL"
        }
    }

    doFirst {
        systemProperty "java.util.concurrent.ForkJoinPool.common.parallelism", "128"
        systemProperty 'test.corda.release.version', corda_release_version
    }
}

configurations {
    freighterTestCompile {
        canBeConsumed = false
        canBeResolved = false
        extendsFrom testCompile
    }
    freighterTestRuntime {
        canBeConsumed = false
        canBeResolved = false
        extendsFrom testRuntime
    }
    freighterTestCompileClasspath {
        attributes { attr ->
            attr.attribute(LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, objects.named(LibraryElements, LibraryElements.JAR))
        }
    }
}

dependencies {
    freighterTestCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    freighterTestCompile "freighter:freighter-testing-core-junit5:$freighter_version"

    freighterTestCompile project(":contracts")
    freighterTestCompile project(":workflows")
}
