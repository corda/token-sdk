apply plugin: 'kotlin-jpa'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.cordapp'

cordapp {
    targetPlatformVersion 5
    minimumPlatformVersion 5
    workflow {
        name "Token SDK Workflows"
        vendor "R3"
        licence "Apache 2"
        versionId 2
    }
    signing {
        enabled false
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    // Kotlin.
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda dependencies.
    cordaCompile("$corda_release_group:corda-core:$corda_release_version") {
        changing = true
    }

    // Logging.
    testCompile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"

    // Testing.
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // CorDapp dependencies.
    cordapp project(":contracts")
    compile project(":modules:money")
    compile project(":modules:selection")

    //CI for confidential tokens
    cordapp "$confidential_id_release_group:ci-workflows:$confidential_id_release_version"

    //just for testing - this means you MUST specify the contracts-for-testing cordapp as a cordapp in all tests using test flows
    compileOnly project(":modules:contracts-for-testing")
    testCompile project(":modules:contracts-for-testing")

    compileOnly("org.postgresql:postgresql:42.2.8")

}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

jar {
    baseName "tokens-workflows"
}