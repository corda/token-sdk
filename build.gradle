import static org.gradle.api.JavaVersion.VERSION_11

buildscript {
    ext {
        corda_release_group = 'net.corda'
        corda_release_version = '4.12-20231108_151736-24da24e'
        confidential_id_release_group = "com.r3.corda.lib.ci"
        confidential_id_release_version = "1.2-HC01"

        corda_gradle_plugins_version = '5.1.1'
        snappy_version = '0.4'
        kotlin_version = '1.9.0'
        junit_version = '4.12'
        dokka_version = '0.9.17'
        slf4j_version = '1.7.25'
        log4j_version = '2.9.1'
        jackson_version = '2.9.0'
        aetherVersion = '1.0.0.v20140518'
        mavenVersion = '3.1.0'
        maven_resolver_version = "1.1.1"

        test_module_opens = [
            '--add-opens' , 'java.base/java.time=ALL-UNNAMED' , '--add-opens' , 'java.base/java.io=ALL-UNNAMED' ,
            '--add-opens' , 'java.base/java.util=ALL-UNNAMED' , '--add-opens' , 'java.base/java.net=ALL-UNNAMED' ,
            '--add-opens' , 'java.base/java.nio=ALL-UNNAMED' , '--add-opens' , 'java.base/java.lang.invoke=ALL-UNNAMED' ,
            '--add-opens' , 'java.base/java.security.cert=ALL-UNNAMED' , '--add-opens' , 'java.base/java.security=ALL-UNNAMED' ,
            '--add-opens' , 'java.base/javax.net.ssl=ALL-UNNAMED' , '--add-opens' , 'java.base/java.lang=ALL-UNNAMED' ,
            '--add-opens' , 'java.base/java.util.concurrent=ALL-UNNAMED' , '--add-opens' , 'java.sql/java.sql=ALL-UNNAMED'
        ]
        test_module_exports = [
            '--add-exports', 'java.base/sun.nio.ch=ALL-UNNAMED'
        ]
    }

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()

        maven { url "${publicArtifactURL}/corda-releases" }
        maven { url "${publicArtifactURL}/corda-dependencies" }
        maven { url "https://repo.gradle.org/gradle/libs-releases-local/" }

        maven {
            url "${artifactoryContextUrl}/corda-dev"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password = System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

plugins {
    id "org.ajoberstar.grgit" version "4.0.0"
    id 'corda.root-publish'
}

// If the command line project option -PversionFromGit is added to the gradle invocation, we'll resolve
// the latest git commit hash and timestamp and create a version postfix from that
if (project.hasProperty("versionFromGit")) {
    ext.versionSuffix = "${grgit.head().dateTime.format("yyyyMMdd_HHmmss")}-${grgit.head().abbreviatedId}"
}

if (ext.versionSuffix != "") {
    ext.tokens_release_version = "${ext.baseVersion}-${ext.versionSuffix}".toString()
} else {
    ext.tokens_release_version = "${ext.baseVersion}".toString()
}

allprojects {
    version "$tokens_release_version"

    configurations.all {
        resolutionStrategy {
            // Force dependencies to use the same version of Kotlin
            force "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
            cacheChangingModulesFor 0, 'seconds'
        }
    }
}

subprojects {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url "${publicArtifactURL}/corda-releases" }
        maven { url "${publicArtifactURL}/corda-lib" }
        maven { url "${publicArtifactURL}/corda-dependencies" }
        maven { url "https://repo.gradle.org/gradle/libs-releases-local/" }

        maven {
            url "${artifactoryContextUrl}/corda-dev"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password = System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
        }
        maven {
            url "${artifactoryContextUrl}/corda-lib-dev"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password = System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
        }
    }

    apply plugin: 'org.jetbrains.kotlin.jvm'

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.8"
            apiVersion = "1.8"
            jvmTarget = VERSION_11
            javaParameters = true   // Useful for reflection.
        }
    }

    java {
        sourceCompatibility = "11"
        targetCompatibility = "11"
    }

    tasks.withType(Jar) {
        jar {
            exclude "**/log4j2*.xml"
        }
    }

    tasks.withType(Test) {
        minHeapSize = "128m"
        maxHeapSize = "4096m"
    }
}

// Don't publish an empty "modules" JAR.
def publishProjects = [
        project(":contracts"),
        project(":workflows"),
        project(":modules:contracts-for-testing")
]

configure(publishProjects) { Project subproject ->
    apply plugin: 'corda.common-publishing'

    task sourceJar(type: Jar, dependsOn: subproject.classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: subproject.javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }

    publishing {
        publications {
            create(subproject.name, MavenPublication) {
                from components.java

                groupId subproject.group
                artifactId "tokens-${subproject.name}"
                artifact tasks.sourceJar
                artifact tasks.javadocJar

                pom {
                    name = subproject.name
                    description = subproject.description
                    url = 'https://github.com/corda/token-sdk'
                    scm {
                        url = 'https://github.com/corda/token-sdk'
                    }
                    licenses {
                        license {
                            name = 'Apache-2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            id = 'R3'
                            name = 'R3'
                            email = 'dev@corda.net'
                        }
                    }
                }
            }
        }
    }
}

wrapper {
    gradleVersion = "7.6"
    distributionType = Wrapper.DistributionType.ALL
}

